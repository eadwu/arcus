---
  image: base/archlinux:latest

  variables:
    TMPDIR: /tmp

  build-repo:
    stage: build
    artifacts:
      expire_in: 1d
      paths:
        - repo
    before_script:
      - pacman -Syy
      - pacman -Syu --noconfirm
      - pacman -S base-devel --noconfirm
      - curl -sS "https://gitlab.com/arch-dual-boot/arch-x-os/raw/master/scripts/pacman.conf.patch" | patch -p1 /etc/pacman.conf
      - pacman -Syy
      - pacman -Syu --noconfirm
      - chown nobody:$(id -gn nobody) /
      - "echo 'nobody ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"
    script:
      - for d in *; do [ -f "${d}/PKGBUILD" ] && (cd $(readlink -f "${d}") && sudo -u nobody BUILDDIR="${TMPDIR}/makepkg" PKGDEST="${TMPDIR}/repo/x86_64" SRCDEST="${TMPDIR}/src/${d}" SRCPKGDEST="${TMPDIR}/srcpackages" LOGDEST="${TMPDIR}/makepkglogs" makepkg -csi --noconfirm); done
      - mv "${TMPDIR}/repo" "${CI_PROJECT_DIR}"

  pages:
    stage: deploy
    dependencies:
      - build-repo
    only:
      - master
    artifacts:
      paths:
        - public
    before_script:
      - pacman -Syy
      - pacman -Syu --noconfirm
      - pacman -S pacman-contrib --noconfirm
      - mkdir "${CI_PROJECT_DIR}/.public"
      - curl -sSL "${CI_PROJECT_URL}/-/jobs/artifacts/master/download?job=build-repo" -o build-repo.zip
      - bsdtar xvf build-repo.zip -C "${CI_PROJECT_DIR}/.public" "*.pkg.tar.xz"
      - rm -f build-repo.zip
    script:
      - cp -nr "${CI_PROJECT_DIR}/repo" "${CI_PROJECT_DIR}/.public"
      - paccache -rvc "${CI_PROJECT_DIR}/.public/repo/x86_64"
      - repo-add "${CI_PROJECT_DIR}/.public/repo/x86_64/arcus.db.tar.gz" "${CI_PROJECT_DIR}/.public/repo/x86_64"/*.pkg.tar.xz
    after_script:
      - mv "${CI_PROJECT_DIR}/.public" "${CI_PROJECT_DIR}/public"

  stages:
    - build
    - deploy
